{"version":3,"sources":["../server/server.js"],"names":["require","ObjectId","ObjectID","sourceMapSupport","install","express","bodyParser","app","qpm","mongodb","processQuery","autoDetect","fieldPattern","dataType","converters","objectId","use","json","get","req","res","post","body","insurance","issue_date","Date","newRider","Rider","save","then","rider","console","log","message","status","error","send","newSacco","Sacco","sacco","err","find","ridersId","params","id","findById","_id","create","result","insertedId","addedRider","put","findByIdAndUpdate","updatedRider","saccos","stck","sacco_id","stack","new_sacco","added_sacco","remove","findByIdAndRemove","exec","saccoId","addedSacco","saccosId","updatedSacco","mongoose","connect","useNewUrlParser","listen"],"mappings":"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","sourcesContent":["import sourceMapSupport from 'source-map-support';\n// import queryString from 'query-String'\n// import { MongoClient } from 'mongodb';\nimport mongoose, { Schema } from 'mongoose';\n\n// mongoose models\nimport { Sacco, Rider } from './db.models.js';\n\nrequire('babel-polyfill');\n\nconst ObjectId = require('mongodb').ObjectID;\n\nsourceMapSupport.install();\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// an instance of express\nconst app = express();\n\n// mounting other middlewares into our server.js\n// app.use(express.static('static'));\n\n\nconst qpm = require('query-params-mongo');\nconst mongodb = require('mongodb');\n\nconst processQuery = qpm({\n  autoDetect: [{ fieldPattern: /_id$/, dataType: 'objectId' }],\n  converters: { objectId: mongodb.ObjectID },\n});\n\n\napp.use(bodyParser.json());\n// OUR SERVER CODE WILL GO HERE\n\n// BASIC CRUD APIS\n\napp.get('/', (req, res) => {\n  res.json('this is our first server page');\n});\n\napp.post('/api/riders', (req, res) => {\n  if (req.body.insurance.issue_date) req.body.insurance.issue_date = new Date(req.body.insurance.issue_date);\n  const newRider = new Rider(req.body);\n  newRider.save()\n    .then((rider) => {\n      console.log({ message: 'The rider was added successfully' });\n      res.status(200).json({ rider });\n    })\n    .catch((error) => {\n      res.status(400).send({ message: `Unable to add the rider: ${error}` });\n    });\n});\n\napp.post('/api/saccos', (req, res) => {\n  console.log(req.body);\n  const newSacco = new Sacco(req.body);\n  // if (!new_sacco._id) new_sacco._id = Schema.Types.ObjectId;\n  newSacco.save()\n    .then((sacco) => {\n      console.log({ message: 'The sacco was added successfully' });\n      res.status(200).json({ sacco });\n    })\n    .catch((err) => {\n      res.status(400).send({ message: `Unable to add the sacco: ${err}` });\n    });\n});\n\n\n/* GET ALL RIDERS */\napp.get('/api/riders', (req, res) => {\n  Rider.find().then((rider) => {\n    if (!rider) res.status(404).json({ message: 'No avilable Riders in the system' });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* GET SINGLE RIDER BY ID */\napp.get('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  Rider.findById({ _id: ridersId }).then((rider) => {\n    if (!rider) res.status(404).json({ message: `No such Rider: ${ridersId}` });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* SAVE RIDERS */\napp.post('api/riders', (req, res) => {\n  const newRider = req.body;\n  Rider.create(newRider).then((result) => {\n    Rider.findById({ _id: result.insertedId }).then(((addedRider) => {\n      res.json(addedRider);\n    }));\n  }).catch((error) => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\n/* UPDATE PRODUCT */\napp.put('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  const newRider = req.body;\n  Rider.findByIdAndUpdate({ _id: ridersId }, newRider).find({ _id: ridersId }).then((updatedRider) => {\n    res.json(updatedRider);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the riders information ${err}` });\n  });\n});\n// Sacco APIs\napp.get('/api/saccos', (req, res) => {\n    Sacco.find().then((saccos) => {\n        res.status(200).send(saccos)\n    }).catch((error) => {\n        res.send(`Internal server error ${err.stck}`).status(400);\n    });\n    app.get('/api/saccos/:id', (req, res) => {\n        let sacco_id;\n        try {\n            sacco_id = req.params.id;\n        } catch (error) {\n            res.json({ message: `Invalid sacco id${error}` })\n        }\n        Sacco.findById({ _id: sacco_id }).then((sacco) => {\n            res.json(sacco).status(200);\n        }).catch((err) => {\n            res.send(`Internal server error${err.stack}`).status(400);\n        });\n    })\n\n    app.post('api/saccos', (req, res) => {\n        let new_sacco = req.body;\n        Sacco.create(new_sacco).then((result) => {\n            Sacco.findById({ _id: result.insertedId }).then((added_sacco => {\n                res.json(added_sacco);\n            }))\n        }).catch(error => {\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n    });\n    app.delete(`/api/saccos/:id`, (req, res) => {\n        Sacco.remove({\n            _id : req.params.id\n        },\n            (err, sacco) => {\n                if (err) {\n                    res.send(err)\n                } res.json({\n                    status: \"success\",\n                    message: 'Sacco deleted'\n                })\n            })\n    })\n})\n\n/* DELETE PRODUCT */\napp.delete('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: ridersId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the riders profile ${err}` });\n  });\n});\n// THIS IS THE SACCOS APIS\n// get all saccos\napp.get('/api/saccos', (req, res) => {\n  Sacco.find()\n    .exec()\n    .then((saccos) => {\n      res.status(200).json(saccos);\n    }).catch((err) => {\n      res.send(`Internal server error${err.stack}`).status(400);\n    });\n});\napp.get('/api/saccos/:id', (req, res) => { // parameter\n  let saccoId;\n  try {\n    saccoId = req.params.id;\n  } catch (error) {\n    res.json({ message: `Invalid sacco id ${error}` });\n  }\n\n  Sacco.findById({ _id: saccoId }).then((sacco) => {\n    res.json(sacco).status(200);\n  }).catch((err) => {\n    res.send(`Internal server error${err.stack}`).status(400);\n  });\n});\n\n// post api\napp.post('api/saccos', (req, res) => {\n  const newSacco = new Sacco(req.body);\n  newSacco.save().then((addedSacco) => {\n    // console.log(addedSacco);\n    res.status(200).json(addedSacco);\n  }).catch((error) => {\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: saccosId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the saccos profile ${err}` });\n  });\n});\n\n\napp.put('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  const newSacco = req.body;\n\n  Sacco.findByIdAndUpdate({ _id: saccosId }, newSacco).find({ _id: saccosId }).then((updatedSacco) => {\n    res.json(updatedSacco);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the saccos information ${err}` });\n  });\n});\n\n\n// creating a connection to mongoose\n\nmongoose.connect('mongodb://127.0.0.1:27017/fika-safe', { useNewUrlParser: true })\n  .then(() => {\n    app.listen(3000, () => {\n      console.log('Listening on port 3000');\n    });\n  }).catch((error) => {\n    console.log({ message: `Unable to establish a connection to the server ${error}` });\n  });\n"],"file":"server.js"}