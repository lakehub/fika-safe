{"version":3,"sources":["../server/server.js"],"names":["require","ObjectId","ObjectID","sourceMapSupport","install","express","bodyParser","app","qpm","mongodb","processQuery","autoDetect","fieldPattern","dataType","converters","objectId","use","json","get","req","res","post","newRider","Rider","body","save","then","rider","console","log","message","status","error","send","newSacco","Sacco","sacco","err","find","ridersId","params","id","findById","_id","create","result","insertedId","addedRider","put","findByIdAndUpdate","updatedRider","findByIdAndRemove","saccos","stack","saccoId","addedSacco","saccosId","updatedSacco","mongoose","connect","useNewUrlParser","listen"],"mappings":"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","sourcesContent":["import sourceMapSupport from 'source-map-support';\n// import queryString from 'query-String'\n// import { MongoClient } from 'mongodb';\nimport mongoose, { Schema } from 'mongoose';\n\n// mongoose models\nimport { Sacco, Rider } from './db.models.js';\n\nrequire('babel-polyfill');\n\nconst ObjectId = require('mongodb').ObjectID;\n\nsourceMapSupport.install();\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// an instance of express\nconst app = express();\n\n// mounting other middlewares into our server.js\n// app.use(express.static('static'));\n\n\nconst qpm = require('query-params-mongo');\nconst mongodb = require('mongodb');\n\nconst processQuery = qpm({\n  autoDetect: [{ fieldPattern: /_id$/, dataType: 'objectId' }],\n  converters: { objectId: mongodb.ObjectID },\n});\n\n\napp.use(bodyParser.json());\n// OUR SERVER CODE WILL GO HERE\n\n// BASIC CRUD APIS\n\napp.get('/', (req, res) => {\n  res.json('this is our first server page');\n});\n\napp.post('/api/riders', (req, res) => {\n  const newRider = new Rider(req.body);\n  newRider.save()\n    .then((rider) => {\n      console.log({ message: 'The rider was added successfully' });\n      res.status(200).json({ rider });\n    })\n    .catch((error) => {\n      res.status(400).send({ message: `Unable to add the rider: ${error}` });\n    });\n});\n\napp.post('/api/saccos', (req, res) => {\n  console.log(req.body);\n  const newSacco = new Sacco(req.body);\n  // if (!new_sacco._id) new_sacco._id = Schema.Types.ObjectId;\n  newSacco.save()\n    .then((sacco) => {\n      console.log({ message: 'The sacco was added successfully' });\n      res.status(200).json({ sacco });\n    })\n    .catch((err) => {\n      res.status(400).send({ message: `Unable to add the sacco: ${err}` });\n    });\n});\n\n\n/* GET ALL RIDERS */\napp.get('/api/riders', (req, res) => {\n  Rider.find().then((rider) => {\n    if (!rider) res.status(404).json({ message: 'No avilable Riders in the system' });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* GET SINGLE RIDER BY ID */\napp.get('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  Rider.findById({ _id: ridersId }).then((rider) => {\n    if (!rider) res.status(404).json({ message: `No such Rider: ${ridersId}` });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* SAVE RIDERS */\napp.post('api/riders', (req, res) => {\n  const newRider = req.body;\n  Rider.create(newRider).then((result) => {\n    Rider.findById({ _id: result.insertedId }).then(((addedRider) => {\n      res.json(addedRider);\n    }));\n  }).catch((error) => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\n/* UPDATE PRODUCT */\napp.put('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  const newRider = req.body;\n  Rider.findByIdAndUpdate({ _id: ridersId }, newRider).find({ _id: ridersId }).then((updatedRider) => {\n    res.json(updatedRider);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the riders information ${err}` });\n  });\n});\n\n\n/* DELETE PRODUCT */\napp.delete('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: ridersId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the riders profile ${err}` });\n  });\n});\n// THIS IS THE SACCOS APIS\n// get all saccos\napp.get('/api/saccos', (req, res) => {\n  Sacco.find().then((saccos) => {\n    res.status(200).send(saccos);\n  }).catch((err) => {\n    res.send(`Internal server error${err.stack}`).status(400);\n  });\n});\napp.get('/api/saccos/:id', (req, res) => { // parameter\n  let saccoId;\n  try {\n    saccoId = req.params.id;\n  } catch (error) {\n    res.json({ message: `Invalid sacco id ${error}` });\n  }\n\n  Sacco.findById({ _id: saccoId }).then((sacco) => {\n    res.json(sacco).status(200);\n  }).catch((err) => {\n    res.send(`Internal server error${err.stack}`).status(400);\n  });\n});\n\n// post api\napp.post('api/saccos', (req, res) => {\n  const newSacco = req.body;\n  Sacco.create(newSacco).then((result) => {\n    Sacco.findById({ _id: result.insertedId }).then(((addedSacco) => {\n      res.json(addedSacco);\n    }));\n  }).catch((error) => {\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: saccosId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the saccos profile ${err}` });\n  });\n});\n\n\napp.put('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  const newSacco = req.body;\n\n  Sacco.findByIdAndUpdate({ _id: saccosId }, newSacco).find({ _id: saccosId }).then((updatedSacco) => {\n    res.json(updatedSacco);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the saccos information ${err}` });\n  });\n});\n\n\n// creating a connection to mongoose\n\nmongoose.connect('mongodb://127.0.0.1:27017/fika-safe', { useNewUrlParser: true })\n  .then(() => {\n    app.listen(3000, () => {\n      console.log('Listening on port 3000');\n    });\n  }).catch((error) => {\n    console.log({ message: `Unable to establish a connection to the server ${error}` });\n  });\n"],"file":"server.js"}